{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFTutorialBulkCopyDFbanto"
		},
		"TriggerTestPipeline_properties_SourceMetadata_parameters_TableName": {
			"type": "string",
			"defaultValue": "SDKLOVVALUES"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MX01_TP_REP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set extraction timestamp",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "extractionTimestamp",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Select last run information",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set timestamp for file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@concat('select \nLAST_RUN_TIMESTAMP,\nLAST_RUN_CLOSING\nfrom SHARED.EXTR_LAST_RUN_INFO\nWHERE JOB_NAME = ''',pipeline().Pipeline,'''')",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"dataset": {
								"referenceName": "SnowflakeTable1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "EXTR_LAST_RUN_INFO"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "set last run timestamp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Select last run information",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "lastRunTimestamp",
							"value": {
								"value": "@if(\nequals(activity('Select last run information').output.value[0].LAST_RUN_TIMESTAMP,NULL)\n,NULL\n,formatDateTime(activity('Select last run information').output.value[0].LAST_RUN_TIMESTAMP,'yyyy-MM-dd HH-mm-ss'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set last run closing",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "set last run timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "lastRunClosing",
							"value": {
								"value": "@if(\nequals(activity('Select last run information').output.value[0].LAST_RUN_CLOSING,NULL)\n,NULL\n,formatDateTime(activity('Select last run information').output.value[0].LAST_RUN_CLOSING,'yyyy-MM-dd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data for each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetGroupSCN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetGroupSCN').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Extract data to Parquet in BLOB Storage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "@concat('SELECT /*+ NO_PARALLEL(\"', variables('table'),'\") */  * FROM ',variables('table'),' WHERE ORA_ROWSCN BETWEEN ', item().STARTING_VALUE, ' AND ',item().ENDING_VALUE, ' AND m_ref_data in (select d.m_ref_data from DYN_AUDIT_REP d, JOB_AUDIT_REP j where d.m_idjob=j.m_mx_ref_job and d.M_DELETED  = ''N'' and j.M_STATUS in  (''Done'',''Corrected'') and  to_char(to_date(TO_CHAR (d.M_DATEGEN, ''DDMMYYYY'')|| ''_'' || TO_CHAR (d.M_TIMEGEN),''DDMMYYYY SSSSS''),''YYYY-MM-DD HH24-MI-SS'') >''',\nvariables('lastRunTimestamp'), \n''' and  to_char(to_date(TO_CHAR (d.M_DATEGEN, ''DDMMYYYY'')|| ''_''|| TO_CHAR (d.M_TIMEGEN),''DDMMYYYY SSSSS''),''YYYY-MM-DD HH24-MI-SS'') <= ''', formatDateTime(variables('extractionTimestamp'), 'yyyy-MM-dd HH-mm-ss'), ''')')",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings",
												"maxRowsPerFile": 2000000,
												"fileNamePrefix": {
													"value": "@concat(variables('table'), '_', variables('fileTimestamp'),'_',string(item().GROUP_NBR),'_')",
													"type": "Expression"
												}
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MX01_MXDM_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"db_schema": {
													"value": "@variables('dbSchema')",
													"type": "Expression"
												},
												"db_table": {
													"value": "@variables('table')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DataExtraction_Parquet",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@concat('ORACLE/',variables('dbHost'),'/',variables('dbSchema'),'/',variables('table'),'/',variables('folderTimestamp'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set timestamp for folder",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set extraction timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "folderTimestamp",
							"value": {
								"value": "@formatDateTime(variables('extractionTimestamp'),'yyyy-MM-dd HH-mm-ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set timestamp for file",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set timestamp for folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileTimestamp",
							"value": {
								"value": "@formatDateTime(variables('extractionTimestamp'),'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetGroupSCN",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "set last run closing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "@concat(\n'select\nCASE\nWHEN grp_nbr = 1\nTHEN min(ora_rowscn)\nWHEN grp_nbr > 1\nTHEN min(ora_rowscn) +1\nEND as Starting_Value\n,   max(ora_rowscn) as Ending_Value\n,   count(*)        as Total_Records\n,   grp_nbr         as Group_Nbr\nfrom (\nselect ora_rowscn,\nntile(4) over (order by ora_rowscn) grp_nbr\nfrom ', \nvariables('table'), \n' where m_ref_data in (select d.m_ref_data from DYN_AUDIT_REP d, JOB_AUDIT_REP j where d.m_idjob=j.m_mx_ref_job and d.M_DELETED  = ''N'' and j.M_STATUS in  (''Done'',''Corrected'') and  to_char(to_date(TO_CHAR (d.M_DATEGEN, ''DDMMYYYY'')|| ''_'' || TO_CHAR (d.M_TIMEGEN),''DDMMYYYY SSSSS''),''YYYY-MM-DD HH24-MI-SS'') >''',\nvariables('lastRunTimestamp'), \n''' and  to_char(to_date(TO_CHAR (d.M_DATEGEN, ''DDMMYYYY'')|| ''_''|| TO_CHAR (d.M_TIMEGEN),''DDMMYYYY SSSSS''),''YYYY-MM-DD HH24-MI-SS'') <= ''', formatDateTime(variables('extractionTimestamp'), 'yyyy-MM-dd HH-mm-ss'), ''')\n)\ngroup by grp_nbr\nORDER BY grp_nbr ASC'\n)\n",
									"type": "Expression"
								},
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "MX01_MXDM_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"db_schema": {
										"value": "@variables('dbSchema')",
										"type": "Expression"
									},
									"db_table": {
										"value": "@variables('table')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"variables": {
					"extractionTimestamp": {
						"type": "String"
					},
					"lastRunTimestamp": {
						"type": "String"
					},
					"lastRunClosing": {
						"type": "String"
					},
					"dbSchema": {
						"type": "String",
						"defaultValue": "MX_DATAMART"
					},
					"dbHost": {
						"type": "String",
						"defaultValue": "MX03"
					},
					"folderTimestamp": {
						"type": "String"
					},
					"fileTimestamp": {
						"type": "String"
					},
					"table": {
						"type": "String",
						"defaultValue": "ATEL_TP_REP"
					}
				},
				"folder": {
					"name": "ERSExtractionJobTesting/MX01_Full"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MX03_FULL_EXTRACTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MTM_RAW_VW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_MTM_RAW_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "MXDM_SMALL_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_MXDM_SMALL_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "HDR_DBF",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_HDR_DBF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "DLV_PHYS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_DLV_PHYS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "TP_REP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 5 minutes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_TP_REP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "MXPRO_SMALL_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 5 minutes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_MXPRO_SMALL_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "MEDIUM_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 10 minutes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_MEDIUM_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DLV_PHYS_PROF_DBF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MEDIUM_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_DLV_PHYS_PROF_DBF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FIN_POS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DLV_PHYS_PROF_DBF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_FIN_POS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "EXP_HR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FIN_POS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX03_EXP_HR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait 5 minutes",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "HDR_DBF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MTM_RAW_VW",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MXDM_SMALL_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DLV_PHYS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "Wait 10 minutes",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "TP_REP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MXPRO_SMALL_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 600
						}
					}
				],
				"folder": {
					"name": "ERSExtractionJobTesting/MX03_Full"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/One-Time_Test_MX01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MX01_EXP_HR_V1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-09-02T03:30:00.000Z",
						"endTime": "2020-09-03T03:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OneTimeSunday_8Processes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MX01_EXP_HR_V1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2020-09-06T10:00:00.000Z",
						"endTime": "2020-09-09T11:53:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"weekDays": [
								"Sunday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Scheduler')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "GetTableListAndTriggerCopyData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2020-05-19T11:06:00Z",
						"endTime": "2020-05-19T15:06:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MX01_MXMD_SMALL_TABLES",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2020-08-10T14:45:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerTestPipeline')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SourceMetadata",
							"type": "PipelineReference"
						},
						"parameters": {
							"TableName": "[parameters('TriggerTestPipeline_properties_SourceMetadata_parameters_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 15,
						"startTime": "2020-08-11T07:28:00.000Z",
						"endTime": "2020-08-11T17:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MX01_FULL_EXTRACTION')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MTM_RAW_VW",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_MTM_RAW_VW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "MXDM_SMALL_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_MXDM_SMALL_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "HDR_DBF",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_HDR_DBF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "DLV_PHYS",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_DLV_PHYS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "TP_REP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 5 minutes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_TP_REP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "MXPRO_SMALL_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 5 minutes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_MXPRO_SMALL_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "MEDIUM_TABLES",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 10 minutes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_MEDIUM_TABLES",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DLV_PHYS_PROF_DBF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MEDIUM_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_DLV_PHYS_PROF_DBF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FIN_POS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DLV_PHYS_PROF_DBF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_FIN_POS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "EXP_HR",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FIN_POS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MX01_EXP_HR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait 5 minutes",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "HDR_DBF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MTM_RAW_VW",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MXDM_SMALL_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DLV_PHYS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "Wait 10 minutes",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "TP_REP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "MXPRO_SMALL_TABLES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 600
						}
					}
				],
				"folder": {
					"name": "ERSExtractionJobTesting/MX01_Full"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MX01_TP_REP')]"
			]
		}
	]
}