{
	"name": "MX03_EXP_HR_NEW",
	"properties": {
		"activities": [
			{
				"name": "Set extraction timestamp",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "extractionTimestamp",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data for each SCN group",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetGroupSCN",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetGroupSCN').output.value",
						"type": "Expression"
					},
					"batchCount": 8,
					"activities": [
						{
							"name": "Extract data to Parquet in BLOB Storage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": {
										"value": "@concat('SELECT /*+ NO_PARALLEL(\"', variables('tableName'),'\") */  * FROM ',variables('tableName'),' WHERE ORA_ROWSCN BETWEEN ', item().STARTING_VALUE, ' AND ',item().ENDING_VALUE)",
										"type": "Expression"
									},
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings",
										"maxRowsPerFile": 8000000,
										"fileNamePrefix": {
											"value": "@concat(variables('tableName'), '_', variables('fileTimestamp'),'_',string(item().GROUP_NBR),'_')",
											"type": "Expression"
										}
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "MX03_MXDM_Dynamic",
									"type": "DatasetReference",
									"parameters": {
										"db_schema": {
											"value": "@variables('dbSchema')",
											"type": "Expression"
										},
										"db_table": {
											"value": "@variables('tableName')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DataExtraction_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat('ORACLE/',variables('dbHost'),'/',variables('dbSchema'),'/',variables('tableName'),'/',variables('folderTimestamp'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set timestamp for folder",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set extraction timestamp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "folderTimestamp",
					"value": {
						"value": "@formatDateTime(variables('extractionTimestamp'),'yyyy-MM-dd HH-mm-ss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set timestamp for file",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set timestamp for folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileTimestamp",
					"value": {
						"value": "@formatDateTime(variables('extractionTimestamp'),'yyyyMMddHHmmss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetGroupSCN",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set timestamp for file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": {
							"value": "@concat('select\nCASE\n  WHEN grp_nbr = 1\n  THEN min(ora_rowscn)\n  WHEN grp_nbr > 1\n  THEN min(ora_rowscn) +1\n  END as Starting_Value\n, max(ora_rowscn) as Ending_Value\n, count(*)        as Total_Records\n, grp_nbr         as Group_Nbr\nfrom (\nselect ora_rowscn,\nntile(8) over (order by ora_rowscn) grp_nbr\nfrom ',variables('tableName') ,'\n)\ngroup by grp_nbr\nORDER BY grp_nbr ASC')",
							"type": "Expression"
						},
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "MX03_MXDM_Dynamic",
						"type": "DatasetReference",
						"parameters": {
							"db_schema": "MX_DATAMART",
							"db_table": "@variables('tableName')"
						}
					},
					"firstRowOnly": false
				}
			}
		],
		"variables": {
			"extractionTimestamp": {
				"type": "String"
			},
			"lastRunTimestamp": {
				"type": "String"
			},
			"lastRunClosing": {
				"type": "String"
			},
			"dbSchema": {
				"type": "String",
				"defaultValue": "MX_DATAMART"
			},
			"dbHost": {
				"type": "String",
				"defaultValue": "MX03"
			},
			"folderTimestamp": {
				"type": "String"
			},
			"fileTimestamp": {
				"type": "String"
			},
			"tableName": {
				"type": "String",
				"defaultValue": "ALPIQ_DLT_EXP_HR_REP"
			},
			"processCount": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"folder": {
			"name": "ERSExtractionJobTesting/MX03_Full"
		},
		"annotations": []
	}
}